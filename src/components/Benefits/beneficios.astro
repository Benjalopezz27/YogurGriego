---
import Protein from "../../icons/protein.astro";
import Spoon from "../../icons/spoon.astro";
import Heart from "../../icons/heart.astro";
import Glycemia from "../../icons/glycemia.astro";
import Bone from "../../icons/bone.astro";
import Bolt from "../../icons/bolt.astro";
import Gut from "../../icons/gut.astro";
import BeneficiosCard from "./BeneficiosCard.astro";
import Scale from "../../icons/scale.astro";
import ModalBeneficios from "./modalBeneficios.astro";

import BotonAnterior from "../../icons/BotonAnterior.astro";
import BotonSiguiente from "../../icons/BotonSiguiente.astro";
export const benefits = [
  {
    title: "Alto en proteínas",
    icon: Protein,
    description:
      "El yogur griego es una excelente fuente de proteínas, esenciales para la reparación y construcción muscular.",
  },
  {
    title: "Energía sostenida",
    icon: Bolt,
    description:
      "Proporciona energía duradera gracias a su combinación de proteínas y carbohidratos, ideal para mantenerte activo durante el día.",
  },
  {
    title: "Salud ósea",
    icon: Bone,
    description:
      "El yogur griego es rico en calcio, fundamental para la salud ósea y dental.",
  },
  {
    title: "Mejora la digestión",
    icon: Gut,
    description:
      "Contiene probióticos que favorecen una flora intestinal saludable, mejorando la digestión y absorción de nutrientes.",
  },
  {
    title: "Amigo del corazón",
    icon: Heart,
    description:
      "El consumo regular de yogur griego puede ayudar a reducir el colesterol y mejorar la salud cardiovascular.",
  },
  {
    title: "Versátil en la cocina",
    icon: Spoon,
    description:
      "Su textura cremosa y sabor neutro lo hacen ideal para una variedad de recetas, desde desayunos hasta postres.",
  },
  {
    title: "Control del azúcar",
    icon: Glycemia,
    description:
      "El yogur griego tiene un índice glucémico bajo, ayudando a mantener niveles estables de azúcar en sangre.",
  },
  {
    title: "Control de peso",
    icon: Scale,
    description:
      "Su alto contenido en proteínas y bajo en calorías lo convierten en un aliado para quienes buscan mantener o perder peso.",
  },
];
---

<section class="py-14 px-6" id="beneficios">
  <div class="max-w-6xl mx-auto">
    <header class="text-center mb-8">
      <h2 class="text-3xl md:text-4xl font-extrabold text-[#1a1c2d]">
        Beneficios del Yogur Griego
      </h2>
      <p class="mt-2 text-slate-600 max-w-2xl mx-auto">
        Descubrí por qué el yogur griego es una gran elección para tu día a día.
        Salud, sabor y versatilidad en cada pote.
      </p>
    </header>

    <!-- Desktop grid (visible md+) -->
    <div class="gap-6 grid-cols-2 lg:grid-cols-4 hidden md:grid">
      {
        benefits.map((b, i) => (
          <BeneficiosCard
            title={b.title}
            icon={b.icon}
            description={b.description}
            modalId={`benefit-modal-${i}`}
          />
        ))
      }
    </div>

    <!-- Mobile carousel (visible <md) -->
    <div class="block md:hidden relative">
      <div id="benefits-carousel" class="overflow-hidden relative">
        <div
          id="benefits-track"
          class="flex transition-transform duration-500 ease-in-out"
          style="transform: translateX(0%);"
        >
          {
            benefits.map((b, i) => (
              <div class="w-3xl px-2">
                <BeneficiosCard
                  title={b.title}
                  icon={b.icon}
                  description={b.description}
                  modalId={`benefit-modal-${i}`}
                />
              </div>
            ))
          }
        </div>
      </div>
      <!-- botones prev/next -->
      <button
        id="benefits-prev"
        class="md:hidden flex items-center justify-center absolute left-0 top-1/2 -translate-y-1/2 -translate-x-1/2 z-20 w-10 h-10 rounded-full bg-white/90 shadow hover:bg-white focus:outline-none"
        aria-label="Anterior"
      >
        <BotonAnterior />
      </button>
      <button
        id="benefits-next"
        class="flex md:hidden items-center justify-center absolute right-0 top-1/2 -translate-y-1/2 translate-x-1/2 z-20 w-10 h-10 rounded-full bg-white/90 shadow hover:bg-white focus:outline-none"
        aria-label="Siguiente"
      >
        <BotonSiguiente />
      </button>
    </div>

    <!-- IMPORTANT: renderizamos los modales FUERA del contenedor responsive, siempre en el DOM -->
    {
      benefits.map((b, i) => (
        <ModalBeneficios id={`benefit-modal-${i}`} title={b.title}>
          <div class="space-y-3">
            <p class="text-sm text-slate-700">{b.description}</p>
          </div>
        </ModalBeneficios>
      ))
    }
  </div>
</section>

<script is:inline>
  (function () {
    const track = document.getElementById("benefits-track");
    if (!track) return;

    const prev = document.getElementById("benefits-prev");
    const next = document.getElementById("benefits-next");

    const slides = Array.from(track.children); // cada slide wrapper
    const total = slides.length;
    if (!total) return;

    // índices por slide (no por página)
    let index = 0; // índice del primer slide visible (0..maxIndex)

    // calcula cuántos slides caben visibles ahora y el ancho de cada slide en px
    function computeLayout() {
      const container = track.parentElement; // elemento con overflow:hidden
      const containerW = container.getBoundingClientRect().width;
      const slideW = slides[0].getBoundingClientRect().width;
      // si slideW es 0 (no renderizado aún), usamos fallback basado en porcentaje
      const visible =
        slideW > 0 ? Math.max(1, Math.floor(containerW / slideW)) : 2;
      const maxIndex = Math.max(0, total - visible); // índice máximo del primer slide visible
      return { containerW, slideW, visible, maxIndex };
    }

    // actualiza botones (habilita/deshabilita)
    function updateButtons(maxIndex) {
      if (!prev || !next) return;
      prev.disabled = index <= 0;
      next.disabled = index >= maxIndex;
      prev.classList.toggle("opacity-50", prev.disabled);
      next.classList.toggle("opacity-50", next.disabled);
    }

    // mover el track para que el slide 'index' quede en el inicio de la vista
    function update() {
      const { slideW, visible, maxIndex } = computeLayout();

      // normalizar index por si cambió el tamaño
      if (index < 0) index = 0;
      if (index > maxIndex) index = maxIndex;

      // Usamos porcentaje basado en ancho del slide respecto al track
      // calculamos porcentaje como (index * slideW) / trackWidth * 100
      const trackWidth = track.getBoundingClientRect().width || slideW * total;
      const shiftPx = index * slideW;
      const shiftPercent = (shiftPx / trackWidth) * 100;
      track.style.transform = `translateX(-${shiftPercent}%)`;

      updateButtons(maxIndex);
    }

    // acciones prev/next: avanzan de a 1 slide
    if (prev) {
      prev.addEventListener("click", () => {
        index = Math.max(0, index - 1);
        update();
      });
    }

    if (next) {
      next.addEventListener("click", () => {
        const { maxIndex } = computeLayout();
        index = Math.min(maxIndex, index + 1);
        update();
      });
    }

    // teclado accesible
    if (prev)
      prev.addEventListener("keydown", (e) => {
        if (e.key === "Enter" || e.key === " ") {
          e.preventDefault();
          prev.click();
        }
      });
    if (next)
      next.addEventListener("keydown", (e) => {
        if (e.key === "Enter" || e.key === " ") {
          e.preventDefault();
          next.click();
        }
      });

    // recalcular en resize (debounce)
    let t = null;
    window.addEventListener("resize", () => {
      clearTimeout(t);
      t = setTimeout(() => {
        // asegúrate que index sigue en rango después del resize
        const { maxIndex } = computeLayout();
        if (index > maxIndex) index = maxIndex;
        update();
      }, 100);
    });

    // init
    // fuerza una pequeña espera para que las medidas estén listas si el layout aún pinta
    setTimeout(update, 50);
  })();
</script>
